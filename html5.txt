HTML elements reference

This page lists all the HTML elements. They are grouped
by function to help you find what you have in mind
easily.

For more information about the basics of HTML elements
and attributes, see the section on elements in the
Introduction to HTML article.

MAIN ROOT:
<html>		The HTML <html> element represents the
		root (top-level element) of an HTML
		document, so it is also referred to as
		the root element. All other elements
		must be descendants of this element.

DOCUMENT METADATA:
Information about the page: Styles, scripts and data to
help software (search engines, browsers, etc.) use and
render the page. Metadata for styles and scripts may be
defined in the page or link to another file that has
the information.
<link> 		element specifies relationships between
		the current document and an external
		resource. Possible uses for this
		element include defining a relational
		framework for navigation. This element
		is most used to link to style sheets.
<meta> 		represents metadata that cannot be
		represented by other HTML meta-related
		elements, like <base>, <link>,
		<script>, <style> or <title>.
<style> 	contains style information for a
		document, or part of a document.

SECTIONING ROOT
<body>		represents the content of an HTML
		document. There can be only one <body>
		element in a document.

CONTENT SECTIONING

Allows you to organize the document content into
logical pieces. Use this to create a broad outline for
your page content, including header and footer
navigation, and heading elements to identify sections
of content.
<address>	Indicates that the enclosed HTML
		provides contact information for a
		person or people, or for an
		organization.supplies contact
		information for its nearest <article>
		or <body> ancestor; in the latter case,
		it applies to the whole document.
<article>	represents a self-contained composition
		in a document, page, application, or
		site, which is intended to be
		independently distributable or reusable
		(e.g., in syndication). Examples
		include: a forum post, a magazine or
		newspaper article, or a blog entry.
<aside> 	represents a portion of a document
		whose content is only indirectly
		related to the document's main content.
<footer> 	The HTML <footer> element represents a
		footer for its nearest sectioning
		content or sectioning root element. A
		footer typically contains information
		about the author of the section,
		copyright data or links to related
		documents.
<header> 	represents introductory content,
		typically a group of introductory or
		navigational aids. It may contain some
		heading elements but also other
		elements like a logo, a search form, an
		author name, and so on.
<h1>, <h2>,	The HTML <h1>–<h6> elements represent
<h3>, <h4>,	six levels of section headings. <h1> is
<h5>, <h6> 	the highest section level and <h6> is
		the lowest.
<hgroup>	represents a multi-level heading for a
		section of a document. It groups a set
		of <h1>–<h6> elements.
<nav>		represents a section of a page whose
		purpose is to provide navigation links,
		either within the current document or
		to other documents.  Common examples of
		navigation sections are menus, tables
		of contents, and indexes.
<section>	represents a standalone section — which
		doesn't have a more specific semantic
		element to represent it — contained
		within an HTML document.

TEXT CONTENT:

Use HTML text content elements to organize blocks or
sections of content placed between the opening <body>
and closing </body> tags. Important for accessibility
and SEO, these elements identify the purpose or
structure of that content.
<blockquote> 	indicates that the enclosed text is an
		extended quotation. Usually, this is
		rendered visually by indentation (see
		Notes for how to change it). A URL for
		the source of the quotation may be
		given using the cite attribute, while a
		text representation of the source can
		be given using the <cite> element.
<dd> 		provides the details about or the
		definition of the preceding term (<dt>)
		in a description list (<dl>).
<dir> 		Obsolete. Is used as a container for a
		directory of files and/or folders,
		potentially with styles and icons
		applied by the user agent.
<div> 		generic container for flow content. It
		has no effect on the content or layout
		until styled using CSS.
<dl>		represents a description list. The
		element encloses a list of groups of
		terms (specified using the <dt>
		element) and descriptions. (provided by
		<dd> elements).  Common uses for this
		element are to implement a glossary or
		to display metadata (a list of
		key-value pairs).
<dt> 		specifies a term in a description or
		definition list, and as such must be
		used inside a <dl> element.
<figcaption> 	represents a caption or a legend
		associated with a figure or an
		illustration described by the rest of
		the data of the <figure> element which
		is its immediate ancestor.
<figure>	represents self-contained content,
		frequently with a caption
		(<figcaption>), and is typically
		referenced as a single unit.
<hr>		represents a thematic break between
		paragraph-level elements (for example,
		a change of scene in a story, or a
		shift of topic with a section);
		historically, this has been presented
		as a horizontal rule or line.
<li> 		is used to represent an item in a list.
		It must be contained in a parent
		element: an ordered list (<ol>), an
		unordered list (<ul>), or a menu
		(<menu>). In menus and unordered lists,
		list items are usually displayed using
		bullet points. In ordered lists, they
		are usually displayed with an ascending
		counter on the left, such as a number
		or letter.
<main>		represents the main content of the
		<body> of a document, portion of a
		document, or application. The main
		content area consists of content that
		is directly related to, or expands upon
		the central topic of, a document or the
		central functionality of an
		application.
<ol>		represents an ordered list of items,
		typically rendered as a numbered list.
<p>		represents a paragraph of text.
<pre> 		represents preformatted text which is
		to be presented exactly as written in
		the HTML file.
<ul>		represents an unordered list of items,
		typically rendered as a bulleted list.

INLINE TEXT SEMANTICS

Use the HTML inline text semantic to define the
meaning, structure, or style of a word, line, or any
arbitrary piece of text.
<a>		creates a hyperlink to other web pages,
		files, locations within the same page,
		email addresses, or any other URL.
<abbr>		represents an abbreviation and
		optionally provides a full description
		for it. If present, the title attribute
		must contain this full description and
		nothing else.
<b>		is used to draw the reader's attention
		to the element's contents, which are
		not otherwise granted special
		importance.
<bdi>		isolates a span of text that might be
		formatted in a different direction from
		other text outside it.
<bdo>		overrides the current directionality of
		text, so that the text within is
		rendered in a different direction.
<br>		The HTML <br> element produces a line
		break in text (carriage-return). It is
		useful for writing a poem or an
		address, where the division of lines is
		significant.
<cite>		is used to describe a reference to a
		cited creative work, and must include
		either the title or the URL of that
		work.
<code>		displays its contents styled in a
		fashion intended to indicate that the
		text is a short fragment of computer
		code.
<data>		links a given content with a
		machine-readable translation. If the
		content is time- or date-related, the
		<time> element must be used.
<dfn>		is used to mark the usage instance of
		the enclosed term which is itself
		included within the definition of that
		term.
<em>		marks text that has stress emphasis.
		The <em> element can be nested, with
		each level of nesting indicating a
		greater degree of emphasis.
<i>		represents a range of text that is set
		off from the normal text for some
		reason, for example, technical terms,
		foreign language phrases, or fictional
		character thoughts. It is typically
		displayed in italic type.
<kbd>		represents user input and produces an
		inline element displayed in the
		browser's default monospace font.
<nobr>		obsolete element prevents the text it
		contains from automatically wrapping
		accross multiple lines, potentially
		resulting in the user having to scroll
		horizontally to see the entire width of
		the text.
<mark>		represents highlighted text, i.e., a
		run of text marked for reference
		purpose, due to its relevance in a
		particular context.
<q>		indicates that the enclosed text is a
		short inline quotation. Most modern
		browsers implement this by surrounding
		the text in quotation marks.
<rp>		(Ruby Fallback Parenthesis) element is
		used to provide fall-back parentheses
		for browsers that do not support
		display of ruby annotations using the
		<ruby> element.
<rt>		(HTML Ruby Text) element specifies the
		ruby text component of a ruby
		annotation, which is used to provide
		pronunciation, translation, or
		transliteration information for East
		Asian typography. The <rt> element must
		always be contained within a <ruby>
		element.
<rtc>		(HTML Ruby Text Container) element
		embraces semantic annotations of
		characters presented in a ruby of <rb>
		elements used inside of <ruby> element.
		<rb> elements can have both
		pronunciation (<rt>) and semantic
		(<rtc>) annotations.
<ruby>		represents a ruby annotation. Ruby
		annotations are for showing
		pronunciation of East Asian characters.
<s>		renders text with a strikethrough, or a
		line through it. Use the <s> element to
		represent things that are no longer
		relevant or no longer accurate.
		However, <s> is not appropriate when
		indicating document edits; for that,
		use the <del> and <ins> elements, as
		appropriate.
<samp>		The HTML <samp> element is an element
		intended to identify sample output from
		a computer program. It is usually
		displayed in the browser's default
		monotype font (such as Lucida Console).
<small> 	makes the text font size one size
		smaller (for example, from large to
		medium, or from small to x-small) down
		to the browser's minimum font size.  In
		HTML5, this element is repurposed to
		represent side-comments and small
		print, including copyright and legal
		text, independent of its styled
		presentation.
<span>		generic inline container for phrasing
		content, which does not inherently
		represent anything. It can be used to
		group elements for styling purposes
		(using the class or id attributes), or
		because they share attribute values,
		such as lang.
<strong> 	gives text strong importance and is
		typically displayed in bold.
<sub> 		defines a span of text that should be
		displayed, for typographic reasons,
		lower, and often smaller, than the main
		span of text.
<sup> 		defines a span of text that should be
		displayed, for typographic reasons,
		higher, and often smaller, than the
		main span of text.
<time>		represents either a time on a 24-hour
		clock or a precise date in the
		Gregorian calendar (with optional time
		and timezone information).
<u> 		renders text with an underline, a line
		under the baseline of its content. In
		HTML5, this element represents a span
		of text with an unarticulated, though
		explicitly rendered, non-textual
		annotation, such as labeling the text
		as being a proper name in Chinese text
		(a Chinese proper name mark), or
		labeling the text as being misspelled.
<var>		represents a variable in a mathematical
		expression or a programming context.
<wbr>		represents a word break opportunity—a
		position within text where the browser
		may optionally break a line, though its
		line-breaking rules would not otherwise
		create a break at that location.

IMAGE AND MULTIMEDIA

HTML supports various multimedia resources such as
images, audio, and video.
<area>		defines a hot-spot region on an image,
		and optionally associates it with a
		hypertext link. This element is used
		only within a <map> element.
<audio>		is used to embed sound content in
		documents. It may contain one or more
		audio sources, represented using the
		src attribute or the <source> element:
		the browser will choose the most
		suitable one. It can also be the
		destination for streamed media, using a
		MediaStream.
<img>		embeds an image into the document.
<map>		is used with <area> elements to define
		an image map (a clickable link area).
<track> 	is used as a child of the media
		elements <audio> and <video>. It lets
		you specify timed text tracks (or
		time-based data), for example to
		automatically handle subtitles. The
		tracks are formatted in WebVTT format
		(.vtt files) — Web Video Text Tracks.
<video> 	embed video content in a document.

Embedded content

In addition to regular multimedia content, HTML can
include a variety of other content, even if it's not
always easy to interact with.
<applet> 	an obsolete Applet Element that embeds
		a Java applet into the document; this
		element has been deprecated in favor of
		<object>.
<embed> 	embeds external content at the
		specified point in the document. This
		content is provided by an external
		application or other source of
		interactive content such as a browser
		plug-in.
<noembed>	an obsolete, non-standard way to provide
		alternative, or "fallback", content for
		browsers that do not support the
		<embed> element or do not support the
		type of embedded content an author
		wishes to use.
<object> 	The HTML <object> element represents an
		external resource, which can be treated
		as an image, a nested browsing context,
		or a resource to be handled by a
		plugin.
<param> 	defines parameters for an <object>
		element.  <picture> The HTML <picture>
		element serves as a container for zero
		or more <source> elements and one <img>
		element to provide versions of an image
		for different display device scenarios.
<source> 	specifies multiple media resources for
		the <picture>, the <audio> element, or
		the <video> element.  It is an empty
		element. It is commonly used to serve
		the same media content in multiple
		formats supported by different
		browsers.

SCRIPTING:

In order to create dynamic content and Web
applications, HTML supports the use of scripting
languages, most prominently JavaScript. Certain
elements support this capability.
<canvas> 	use with either the canvas scripting
		API or the WebGL API to draw graphics
		and animations.
<noscript> 	defines a section of HTML to be
		inserted if a script type on the page
		is unsupported or if scripting is
		currently turned off in the browser.
<script> 	used to embed or reference executable
		code; this is typically used to embed
		or refer to JavaScript code.

DEMARCATING EDITS:

These elements let you provide indications that
specific parts of the text have been altered.
<del> 		represents a range of text that has
		been deleted from a document.
<ins> 		represents a range of text that has
		been added to a document.
		
TABLE CONTENT:

The elements here are used to create and handle tabular
data.
<caption> 	this table element specifies the
		caption (or title) of a table, and if
		used is always the first child of a
		<table>.
<col> 		defines a column within a table and is
		used for defining common semantics on
		all common cells.  It is generally
		found within a <colgroup> element.
<colgroup> 	defines a group of columns within a
		table.
<table> 	represents tabular data — that is,
		information presented in a
		two-dimensional table comprised of rows
		and columns of cells containing data.
<tbody> 	groups one or more <tr> elements as the
		body of a <table> element.
<td> 		defines a cell of a table that contains
		data. It participates in the table model.
<tfoot> 	defines a set of rows summarizing the
		columns of the table.
<th>		defines a cell as header of a group of
		table cells. The exact nature of this
		group is defined by the scope and
		headers attributes.
<thead>		defines a set of rows defining the head
		of the columns of the table.
<tr> 		specifies that the markup contained
		inside the <tr> block comprises one row
		of a table, inside which the <th> and
		<td> elements create header and data
		cells, respectively, within the row.

Forms

HTML provides a number of elements which can be used
together to create forms which the user can fill out
and submit to the Web site or application. There's a
great deal of further information about this available
in the HTML forms guide.
<button> 	The HTML <button> element represents a
		clickable button, which can be used in
		forms, or anywhere in a document that
		needs simple, standard button
		functionality.
<datalist>	contains a set of <option> elements
		that represent the values available for
		other controls.
<fieldset> 	The HTML <fieldset> element is used to
		group several controls as well as
		labels (<label>) within a web form.
<form>		represents a document section that
		contains interactive controls to submit
		information to a web server.
<input> 	is used to create interactive controls
		for web-based forms in order to accept
		data from the user.
<label> 	represents a caption for an item in a
		user interface.
<legend> 	element represents a caption for the
		content of its parent <fieldset>.
<meter> 	represents either a scalar value within
		a known range or a fractional value.
<optgroup>	creates a grouping of options within a
		<select> element.
<option> 	is used to define an item contained in
		a <select>, an <optgroup>, or a
		<datalist> element. As such, <option>
		can represent menu items in popups and
		other lists of items in an HTML
		document.
<output> 	a container element into which a site
		or app can inject the results of a
		calculation or the outcome of a user
		action.
<progress> 	displays an indicator showing the
		completion progress of a task,
		typically displayed as a progress bar.
<select>	represents a control that provides a
		menu of options:
<textarea> 	represents a multi-line plain-text
		editing control.

INTERACTIVE ELEMENTS:

HTML offers a selection of elements which help to
create interactive user interface objects.
<details> 	is used as a disclosure widget from
		which the user can retrieve additional
		information.
<dialog> 	represents a dialog box or other
		interactive component, such as an
		inspector or window.
<menu>		represents a group of commands that a
		user can perform or activate. This
		includes both list menus, which might
		appear across the top of a screen, as
		well as context menus, such as those
		that might appear underneath a button
		after it has been clicked.
<menuitem>	represents a command that a user is
		able to invoke through a popup menu.
		This includes context menus, as well as
		menus that might be attached to a menu
		button.
<summary>	is used as a summary, caption, or
		legend for the content of a <details>
		element.

WEB COMPONENTS:

Web Components is an HTML-related technology which
makes it possible to, essentially, create and use
custom elements as if it were regular HTML. In
addition, you can create custom versions of standard
HTML elements.
<content>	obsolete part of the Web Components
		suite of technologies—was used inside
		of Shadow DOM as an insertion point,
		and wasn't meant to be used in ordinary
		HTML.
<element> 	Obsolete. Was part of the Web
		Components specification; it was
		intended to be used to define new
		custom DOM elements.
<shadow> 	obsolete part of the Web Components
		technology suite—was intended to be
		used as a shadow DOM insertion point.
		You might have used it if you have
		created multiple shadow roots under a
		shadow host. It is not useful in
		ordinary HTML.
<slot>		element—part of the Web Components
		technology suite—is a placeholder
		inside a web component that you can
		fill with your own markup, which lets
		you create separate DOM trees and
		present them together.
<template>	is a mechanism for holding client-side
		content that is not to be rendered when
		a page is loaded but may subsequently
		be instantiated during runtime using
		JavaScript.

OBSOLETE AND DEPRECATED ELEMENTS:

Warning: These are old HTML elements which are
deprecated and should not be used. You should never use
them in new projects, and should replace them in old
projects as soon as you can. They are listed here for
informational purposes only.
<acronym>	allows authors to clearly indicate a
		sequence of characters that compose an
		acronym or abbreviation for a word.
		This element has been removed in HTML5.
		Use <abbr> element.
<applet> 	embeds a Java applet into the document;
		this element has been deprecated in
		favor of <object>.
<basefont> 	sets a default font face, size, and
		color for the other elements which are
		descended from its parent element.
<bgsound> 	Internet Explorer only. Sets up a sound
		file to play in the background while
		the page is used; use <audio> instead.
<big> 		renders the enclosed text at a font
		size one level larger than the
		surrounding text (medium becomes large,
		for example).
<blink> 	a non-standard element which causes the
		enclosed text to flash slowly.
<center> 	a block-level element that displays its
		block-level or inline contents centered
		horizontally within its containing
		element.
<command>	represents a command which the user can
		invoke. Commands are often used as part
		of a context menu or toolbar.
<content>	part of the Web Components suite of
		technologies—was used inside of Shadow
		DOM as an insertion point, and wasn't
		meant to be used in ordinary HTML.
<dir>		used as a container for a directory of
		files and/or folders, potentially with
		styles and icons applied by the user
		agent.
<element> 	was part of the Web Components
		specification; it was intended to be
		used to define new custom DOM elements.
<font>		defines the font size, color and face
		for its content.
<frame> 	is an HTML element which defines a
		particular area in which another HTML
		document can be displayed. A frame
		should be used within a <frameset>.
<frameset>	is an HTML element which is used to
		contain <frame> elements.
<image>		remnant of an ancient version of HTML
		lost in the mists of time; use the
		standard <img> element instead.
<isindex	puts a text field in a page for
		querying the document.
<keygen> 	to facilitate generation of key
		material, and submission of the public
		key as part of an HTML form. This
		mechanism is designed for use with
		Web-based certificate management
		systems. It is expected that the
		<keygen> element will be used in an
		HTML form along with other information
		needed to construct a certificate
		request, and that the result of the
		process will be a signed certificate.
<listing>	renders text between the start and end
		tags without interpreting the HTML in
		between and using a monospaced font.
		The HTML 2 standard recommended that
		lines shouldn't be broken when not
		greater than 132 characters.
<marquee>	used to insert a scrolling area of
		text. You can control what happens when
		the text reaches the edges of its
		content area using its attributes.
<multicol> 	an experimental element designed to
		allow multi-column layouts. It never
		got any significant traction and is not
		implemented in any major browsers.
<nextid> 	an obsolete HTML element that served to
		enable the NeXT web designing tool to
		generate automatic NAME labels for its
		anchors.
<nobr>		prevents the text it contains from
		automatically wrapping accross multiple
		lines, potentially resulting in the
		user having to scroll horizontally to
		see the entire width of the text.
<noembed> 	an obsolete, non-standard way to
		provide alternative, or "fallback",
		content for browsers that do not
		support the <embed> element or do not
		support the type of embedded content an
		author wishes to use.
<noframes>	provides content to be presented in
		browsers that don't support (or have
		disabled support for) the <frame>
		element.
<plaintext> 	renders everything following the start
		tag as raw text, without interpreting
		any HTML. There is no closing tag,
		since everything after it is considered
		raw text.
<shadow> 	part of the Web Components technology
		suite—was intended to be used as a
		shadow DOM insertion point. You might
		have used it if you have created
		multiple shadow roots under a shadow
		host. It is not useful in ordinary
		HTML.
<spacer>	allowed insertion of empty spaces on
		pages. It was devised by Netscape to
		accomplish the same effect as a
		single-pixel layout image, which was
		something web designers used to use to
		add white spaces to web pages without
		actually using an image. However,
		<spacer> no longer supported by any
		major browser and the same effects can
		now be achieved using simple CSS.
<strike>	places a strikethrough (horizontal
		line) over text.
<tt>		produces an inline element displayed in
		the browser's default monotype font.
		This element was intended to style text
		as it would display on a fixed width
		display, such as a teletype. It
		probably is more common to display
		fixed width type using the <code>
		element.
<xmp>		renders text between the start and end
		tags without interpreting the HTML in
		between and using a monospaced font.
		The HTML2 specification recommended
		that it should be rendered wide enough
		to allow 80 characters per line.




Elements in HTML have attributes; these are additional
values that configure the elements or adjust their
behavior in various ways to meet the criteria the users
want.

ATTRIBUTE LIST

ATTRIBUTE 	ELEMENTS 	DESCRIPTION
NAME
accept 		<form>,		List of types the
		<input> 	server accepts,
				typically a file type.
accept-charset 	<form> 		List of supported charsets.
accesskey 	Global attribute 	Defines a
keyboard shortcut to activate or add focus to the
element.
action 	<form> 	The URI of a program that processes the
information submitted via the form.
align 	<applet>, <caption>, <col>, <colgroup>,  <hr>,
<iframe>, <img>, <table>, <tbody>,  <td>,  <tfoot> ,
<th>, <thead>, <tr> 	Specifies the horizontal
alignment of the element.
alt 	<applet>, <area>, <img>, <input>
Alternative text in case an image can't be displayed.
async 	<script> 	Indicates that the script
should be executed asynchronously.
autocomplete 	<form>, <input> 	Indicates
whether controls in this form can by default have their
values automatically completed by the browser.
autofocus 	<button>, <input>, <keygen>, <select>,
<textarea> 	The element should be automatically
focused after the page loaded.
autoplay 	<audio>, <video> 	The audio or
video should play as soon as possible.
bgcolor 	<body>, <col>, <colgroup>, <marquee>,
<table>, <tbody>, <tfoot>, <td>, <th>, <tr> 	

Background color of the element.

Note: This is a legacy attribute. Please use the CSS
background-color property instead.
border 	<img>, <object>, <table> 	

The border width.

Note: This is a legacy attribute. Please use the CSS
border property instead.
buffered 	<audio>, <video> 	Contains the
time range of already buffered media.
challenge 	<keygen> 	A challenge string that
is submitted along with the public key.
charset 	<meta>, <script> 	Declares the
character encoding of the page or script.
checked 	<command>, <input> 	Indicates
whether the element should be checked on page load.
cite 	<blockquote>, <del>, <ins>, <q>
Contains a URI which points to the source of the quote
or change.
class 	Global attribute 	Often used with CSS to
style elements with common properties.
code 	<applet> 	Specifies the URL of the
applet's class file to be loaded and executed.
codebase 	<applet> 	This attribute gives
the absolute or relative URL of the directory where
applets' .class files referenced by the code attribute
are stored.
color 	<basefont>, <font>, <hr> 	

This attribute sets the text color using either a named
color or a color specified in the hexadecimal #RRGGBB
format.

Note: This is a legacy attribute. Please use the CSS
color property instead.
cols 	<textarea> 	Defines the number of columns
in a textarea.
colspan 	<td>, <th> 	The colspan attribute
defines the number of columns a cell should span.
content 	<meta> 	A value associated with
http-equiv or name depending on the context.
contenteditable 	Global attribute
Indicates whether the element's content is editable.
contextmenu 	Global attribute 	Defines the ID
of a <menu> element which will serve as the element's
context menu.
controls 	<audio>, <video> 	Indicates
whether the browser should show playback controls to
the user.
coords 	<area> 	A set of values specifying the
coordinates of the hot-spot region.
crossorigin 	<audio>, <img>, <link>, <script>,
<video> 	How the element handles cross-origin
requests
data 	<object> 	Specifies the URL of the
resource.
data-* 	Global attribute 	Lets you attach custom
attributes to an HTML element.
datetime 	<del>, <ins>, <time> 	Indicates the
date and time associated with the element.
default 	<track> 	Indicates that the
track should be enabled unless the user's preferences
indicate something different.
defer 	<script> 	Indicates that the script
should be executed after the page has been parsed.
dir 	Global attribute 	Defines the text
direction. Allowed values are ltr (Left-To-Right) or
rtl (Right-To-Left)
dirname 	<input>, <textarea> 	 
disabled 	<button>, <command>, <fieldset>,
<input>, <keygen>, <optgroup>, <option>, <select>,
<textarea> 	Indicates whether the user can interact
with the element.
download 	<a>, <area> 	Indicates that the
hyperlink is to be used for downloading a resource.
draggable 	Global attribute 	Defines whether
the element can be dragged.
dropzone 	Global attribute 	Indicates that
the element accept the dropping of content on it.
enctype 	<form> 	Defines the content type of the
form date when the method is POST.
for 	<label>, <output> 	Describes elements
which belongs to this one.
form 	<button>, <fieldset>, <input>, <keygen>,
<label>, <meter>, <object>, <output>, <progress>,
<select>, <textarea> 	Indicates the form that is the
owner of the element.
formaction 	<input>, <button> 	Indicates the
action of the element, overriding the action defined in
the <form>.
headers 	<td>, <th> 	IDs of the <th>
elements which applies to this element.
height 	<canvas>, <embed>, <iframe>, <img>, <input>,
<object>, <video> 	

Specifies the height of elements listed here. For all
other elements, use the CSS height property.

Note: In some instances, such as <div>, this is a
legacy attribute, in which case the CSS height property
should be used instead.
hidden 	Global attribute 	Prevents rendering of
given element, while keeping child elements, e.g.
script elements, active.
high 	<meter> 	Indicates the lower bound of
the upper range.
href 	<a>, <area>, <base>, <link> 	 The URL of a
linked resource.
hreflang 	<a>, <area>, <link> 	Specifies the
language of the linked resource.
http-equiv 	<meta> 	 
icon 	<command> 	Specifies a picture which
represents the command.
id 	Global attribute 	Often used with CSS to
style a specific element. The value of this attribute
must be unique.
integrity 	<link>, <script>  	

Security Feature that allows browsers to verify what
they fetch. 

MDN Link
ismap 	<img> 	Indicates that the image is part of a
server-side image map.
itemprop 	Global attribute 	 
keytype 	<keygen> 	Specifies the type of
key generated.
kind 	<track> 	Specifies the kind of text
track.
label 	<track> 	Specifies a user-readable title
of the text track.
lang 	Global attribute 	Defines the language
used in the element.
language 	<script> 	Defines the script
language used in the element.
list 	<input> 	Identifies a list of
pre-defined options to suggest to the user.
loop 	<audio>, <bgsound>, <marquee>, <video>
Indicates whether the media should start playing from
the start when it's finished.
low 	<meter> 	Indicates the upper bound of
the lower range.
manifest 	<html> 	Specifies the URL of the
document's cache manifest.
max 	<input>, <meter>, <progress> 	Indicates the
maximum value allowed.
maxlength 	<input>, <textarea> 	Defines the
maximum number of characters allowed in the element.
minlength 	<input>, <textarea> 	Defines the
minimum number of characters allowed in the element.
media 	<a>, <area>, <link>, <source>, <style>
Specifies a hint of the media for which the linked
resource was designed.
method 	<form> 	Defines which HTTP method to use when
submitting the form. Can be GET (default) or POST.
min 	<input>, <meter> 	Indicates the minimum
value allowed.
multiple 	<input>, <select> 	Indicates
whether multiple values can be entered in an input of
the type email or file.
muted 	<audio>, <video> 	Indicates whether the
audio will be initially silenced on page load.
name 	<button>, <form>, <fieldset>, <iframe>,
<input>, <keygen>, <object>, <output>, <select>,
<textarea>, <map>, <meta>, <param> 	Name of the
element. For example used by the server to identify the
fields in form submits.
novalidate 	<form> 	This attribute indicates that
the form shouldn't be validated when submitted.
open 	<details> 	Indicates whether the details
will be shown on page load.
optimum 	<meter> 	Indicates the optimal
numeric value.
pattern 	<input> 	Defines a regular
expression which the element's value will be validated
against.
ping 	<a>, <area> 	 
placeholder 	<input>, <textarea> 	Provides a hint
to the user of what can be entered in the field.
poster 	<video> 	A URL indicating a poster frame
to show until the user plays or seeks.
preload 	<audio>, <video> 	Indicates
whether the whole resource, parts of it or nothing
should be preloaded.
radiogroup 	<command> 	 
readonly 	<input>, <textarea> 	Indicates
whether the element can be edited.
rel 	<a>, <area>, <link> 	Specifies the
relationship of the target object to the link object.
required 	<input>, <select>, <textarea>
Indicates whether this element is required to fill out
or not.
reversed 	<ol> 	Indicates whether the list
should be displayed in a descending order instead of a
ascending.
rows 	<textarea> 	Defines the number of rows in a
text area.
rowspan 	<td>, <th> 	Defines the number of
rows a table cell should span over.
sandbox 	<iframe> 	 
scope 	<th> 	 
scoped 	<style> 	 
seamless 	<iframe> 	 
selected 	<option> 	Defines a value which
will be selected on page load.
shape 	<a>, <area> 	 
size 	<input>, <select> 	Defines the width of
the element (in pixels). If the element's type
attribute is text or password then it's the number of
characters.
sizes 	<link>, <img>, <source> 	 
slot 	Global attribute 	Assigns a slot in a
shadow DOM shadow tree to an element.
span 	<col>, <colgroup> 	 
spellcheck 	Global attribute 	Indicates
whether spell checking is allowed for the element.
src 	<audio>, <embed>, <iframe>, <img>, <input>,
<script>, <source>, <track>, <video> 	The URL of the
embeddable content.
srcdoc 	<iframe> 	 
srclang 	<track> 	 
srcset 	<img> 	 
start 	<ol> 	Defines the first number if other than
1.
step 	<input> 	 
style 	Global attribute 	Defines CSS styles
which will override styles previously set.
summary 	<table> 	 
tabindex 	Global attribute 	Overrides the
browser's default tab order and follows the one
specified instead.
target 	<a>, <area>, <base>, <form> 	 
title 	Global attribute 	Text to be displayed in
a tooltip when hovering over the element.
type 	<button>, <input>, <command>, <embed>,
<object>, <script>, <source>, <style>, <menu> 	Defines
the type of the element.
usemap 	<img>,  <input>, <object> 	 
value 	<button>, <option>, <input>, <li>, <meter>,
<progress>, <param> 	Defines a default value which
will be displayed in the element on page load.
width 	<canvas>, <embed>, <iframe>, <img>, <input>,
<object>, <video> 	

For the elements listed here, this establishes the
element's width.

Note: For all other instances, such as <div>, this is a
legacy attribute, in which case the CSS width property
should be used instead.
wrap 	<textarea> 	Indicates whether the text
should be wrapped.
Content versus IDL attributes

In HTML, most attributes have two faces: the content
attribute and the IDL attribute.

The content attribute is the attribute as you set it
from the content (the HTML code) and you can set it or
get it via element.setAttribute() or
element.getAttribute(). The content attribute is always
a string even when the expected value should be an
integer. For example, to set an <input> element's
maxlength to 42 using the content attribute, you have
to call setAttribute("maxlength", "42") on that
element.

The IDL attribute is also known as a JavaScript
property. These are the attributes you can read or set
using JavaScript properties like element.foo. The IDL
attribute is always going to use (but might transform)
the underlying content attribute to return a value when
you get it and is going to save something in the
content attribute when you set it. In other words, the
IDL attributes, in essence, reflect the content
attributes.

Most of the time, IDL attributes will return their
values as they are really used. For example, the
default type for <input> elements is "text", so if you
set input.type="foobar", the <input> element will be of
type text (in the appearance and the behavior) but the
"type" content attribute's value will be "foobar".
However, the type IDL attribute will return the string
"text".

IDL attributes are not always strings; for example,
input.maxlength is a number (a signed long). When using
IDL attributes, you read or set values of the desired
type, so input.maxlength is always going to return a
number and when you set input.maxlength ,it wants a
number. If you pass another type, it is automatically
converted to a number as specified by the standard
JavaScript rules for type conversion.

IDL attributes can reflect other types such as unsigned
long, URLs, booleans, etc. Unfortunately, there are no
clear rules and the way IDL attributes behave in
conjunction with their corresponding content attributes
depends on the attribute. Most of the time, it will
follow the rules laid out in the specification, but
sometimes it doesn't. HTML specifications try to make
this as developer-friendly as possible, but for various
reasons (mostly historical), some attributes  behave
oddly (select.size, for example) and you should read
the specifications to understand how exactly they
behave.
Script macros

Differently from text nodes, which might always be the
result of a <script> element placed in the same
position in the HTML source (see, for instance,
document.write()), attributes can be edited only by
scripts placed somewhere else in the page. However
historically this has not always been the case.
Netscape Navigator supported a feature called
"JavaScript entities" or "script macros", by which
script code could be included in HTML attribute values
and determine their result using a syntax similar to
that of character entity references.

For example, according to such syntax, the code <img
width="&{prompt('Width?')};" src="foo.jpg"> would call
the JavaScript prompt() function to ask the user how
wide the image should be.

The HTML 4.01 specification reserves a syntax for the
"future support of script macros" in HTML attributes,
but these have not been incorporated into later
standards and are not supported by any current browser
(including Firefox). A polyfill (entities.js) has been
created in order to allow "script macros" in browsers
that do not natively support this feature.
